openapi: 3.0.1
info:
  title: Hubby API
  description: |
    Welcome to Hubby's eSIM API documentation. This API allows you to interact with our eSIM service by providing endpoints to fetch available eSIM packages and manage traveler information. The aim is to provide a simple and straightforward way to integrate esim functionality with your business. Please note the included examples, to see the diffrent ways to integrate. Below are the primary functionalities offered by our API:
    
    ## Endpoints Overview
    
    ### eSIM Packages
    - **Fetch eSIM Packages**: Retrieve a list of available eSIM packages.
    
    ### Travelers
    Creating a traveler is essential to our system. We support many ways of integrating through this api. You can create a traveler with a package, a budget or just the minimal required fields. But please also note an email adress is not required when opting to communicate the generated promo code yourself.
    - **Create Traveler**: Add a new traveler to the system.
      - **Full Payload**: Create a traveler with all available fields.
      - **Strategy Mode Payload**: Create a traveler a traveler based on the implemented strategy. (We configure a strategy during the onboarding process. e.g. everyone automatically gets 2GB data in the country they are traveling to.)
      - **Minimal Payload**: Create a traveler with the minimum required fields. 
    - **Get Traveler**: Retrieve details of an existing traveler.
    - **Remove Traveler**: Delete a traveler from the system.
    
    Each endpoint follows RESTful principles and returns JSON formatted responses for easy integration. Detailed information on the usage of each endpoint, including request and response formats, can be found in the respective sections below.
  version: 1.1.15
servers:
  - url: https://api-acc.hubby.dev
    description: Acceptance server
  - url: https://api.hubby.dev
    description: Production server

paths:
  /traveler:
    post:
      tags:
      - traveler
      summary: Create a new traveler
      description: Endpoint to create a new traveler.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                arrivalDate:
                  type: string
                  format: date
                country:
                  type: string
                package:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                title:
                  type: string
                pax:
                  type: string
                email:
                  type: string
                  format: email
                returnDate:
                  type: string
                  format: date
                flightNumber:
                  type: string
                gender:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
                phone:
                  type: string
                budget:
                  type: number
                fullName:
                  type: string
                data:
                  type: object
                  additionalProperties: true
              required:
                - arrivalDate
                - country
                - firstName
                - lastName
                - email
                - returnDate
            examples:
              full:
                summary: Full payload
                value:
                  arrivalDate: '2024-03-31'
                  country: PHL
                  package: '340596'
                  firstName: Hubby
                  lastName: Van Dijk
                  title: mr.
                  pax: '1'
                  email: test@hubbyesim.com
                  returnDate: '2024-06-01'
                  flightNumber: KL1234
                  gender: M
                  dateOfBirth: '1999-12-31'
                  shouldMessage: false
                  data:
                    manual: true
              strategy:
                summary: Strategy mode payload 
                value:
                  arrivalDate: '2024-03-31'
                  country: PHL
                  phone: '+3112345678'
                  firstName: Hubby
                  lastName: Van Dijk
                  fullName: Hubby Van Dijk
                  title: mr.
                  pax: '4'
                  email: vandijk@hubbyesim.com
                  returnDate: '2024-12-12'
                  flightNumber: KL1234
                  gender: M
                  dateOfBirth: '1988-02-29'
                  data:
                    campaignId: otb-123
              minimal:
                summary: Minimal payload (uses the strategy mode for package selection)
                value:
                  arrivalDate: '2024-03-31'
                  country: PHL
                  firstName: Hubby
                  lastName: Van Dijk
                  fullName: Hubby Van Dijk
                  returnDate: '2024-12-12'
        required: true
      responses:
        '200':
          description: Traveler successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      promo:
                        type: string
                      package:
                        type: string
                      bookingId:
                        type: string
                  message:
                    type: string
              example:
                success: true
                data:
                  id: DzGiKUZ90zl3o552XqAb
                  promo: u6y62a6ovk
                  package: '340596'
                message: Traveler created successfully!
        '400':
          description: Traveler not created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
    get:
      summary: Get traveler information
      description: Retrieve traveler details using the booking ID.
      tags:
      - traveler
      parameters:
        - name: bookingId
          in: query
          required: true
          description: The booking ID of the traveler.
          schema:
            type: string
            example: 123xyz
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Traveler found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: '#/components/schemas/Traveler'
                  message:
                    type: string
                    example: Traveler found
        '404':
          description: No matching travelers
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: No matching travelers
        '500':
          description: Server error due to missing parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: object
                    example: {}
                  error:
                    type: string
                    example: Missing parameters
    delete:
      tags:
      - traveler
      summary: Delete a previously created traveler
      description: Endpoint to remove a traveler, for example when a booking is cancelled
      parameters:
        - name: id
          in: query
          required: true
          description: The ID of the traveler, you get it when creating a traveler
          schema:
            type: string
            example: 123xyz
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Traveler deleted
        '404':
          description: Traveler not found or unable to remove
  /packages:
    get:
      tags:
      - packages
      summary: Get available packages
      description: Retrieve a list of available packages.
      security:
        - bearerAuth: []
      parameters:
        - name: country
          in: query
          required: false
          schema:
            type: string
            example: PHL
          description: ISO3 country code to filter the list of packages.
      responses:
        '200':
          description: A list of packages
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                         $ref: '#/components/schemas/Package'
              example:
                packages:
                  FRA:
                    - id: '339801'
                      label: 1 GB
                      bytes: 1000000000
                      country: FRA
                      price: 3.8
                      customerPrice: 4.5
                    - id: '339807'
                      label: 5 GB
                      bytes: 5000000000
                      country: FRA
                      price: 10.4
                      customerPrice: 12.25
                    - id: '339810'
                      label: 10 GB
                      bytes: 10000000000
                      country: FRA
                      price: 17.85
                      customerPrice: 21
                    - id: '339813'
                      label: 20 GB
                      bytes: 20000000000
                      country: FRA
                      price: 30.95
                      customerPrice: 36.4
                  PHL:
                    - id: '339816'
                      label: 1 GB
                      bytes: 1000000000
                      country: PHL
                      price: 3.8
                      customerPrice: 4.5
                    - id: '339822'
                      label: 5 GB
                      bytes: 5000000000
                      country: PHL
                      price: 14.1
                      customerPrice: 16.6
                    - id: '339825'
                      label: 10 GB
                      bytes: 10000000000
                      country: PHL
                      price: 24.2
                      customerPrice: 28.5
                    - id: '339828'
                      label: 20 GB
                      bytes: 20000000000
                      country: PHL
                      price: 42
                      customerPrice: 49.4
components:
  schemas:
    Package:
      type: object
      properties:
        id:
          type: string
          example: "1054686"
        label:
          type: string
          example: "500.17 MB"
        bytes:
          type: integer
          example: 500170752
        country:
          type: string
          example: "XS"
        price:
          type: number
          format: float
          example: 0
        customerPrice:
          type: number
          format: float
          example: 8.7
    Traveler:
      type: object
      properties:
        country:
          type: string
          example: "NLD"
        lastName:
          type: string
          example: "Hubby"
        package:
          type: string
          example: "386787"
        pax:
          type: integer
          example: 2
        fullName:
          type: string
          example: "Hubby Joe"
        language:
          type: string
          example: "en"
        bookingId:
          type: string
          example: "B123MY"
        arrivalDate:
          type: string
          format: date-time
          example: "2024-04-22T05:00:00.000Z"
        promo:
          type: string
          example: "taurg6f149"
        firstName:
          type: string
          example: "Joe"
        createdAt:
          type: string
          format: date-time
          example: "2024-04-12T09:51:31.156Z"
        returnDate:
          type: string
          format: date-time
          example: "2024-04-27T05:00:00.000Z"
        email:
          type: string
          example: "hubby@gmail.com"
        sendMessages:
          type: object
          additionalProperties:
            type: object
            properties:
              method:
                type: string
                example: "email"
              id:
                type: string
                example: "1lBKYdPlk0dQvSZ2ICbt-delivery"
              key:
                type: string
                example: "delivery"
              status:
                type: string
                example: "opened"
        partner:
          type: string
          example: "5Y47UlrnXYmt0gPCIxoD"
        id:
          type: string
          example: "0028QRS1h2KnXQMuU1RC"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
